name: CI/CD for my-web

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: E2E (Cypress via Docker Compose)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Start web via Compose
        run: docker compose up -d web

      - name: Wait for web
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:8080 >/dev/null; then
              echo "web is up"; exit 0
            fi
            echo "waiting..."; sleep 2
          done
          echo "web not responding"; exit 1

      - name: Run Cypress (Docker)
        run: docker compose run --rm cypress

      - name: Show web logs if failed
        if: failure()
        run: docker logs my-web || true

      - name: Stop services
        if: always()
        run: docker compose down

  build_and_push:
    name: Build & Push to GHCR
    needs: test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/my-web
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tags
        id: vars
        run: |
          echo "TAG=latest" >> $GITHUB_OUTPUT
          echo "SHA_TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.TAG }}
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SHA_TAG }}

  deploy:
    name: Deploy to Mac mini
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Install cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -o cf.deb
          sudo dpkg -i cf.deb
          cloudflared --version

      - name: Add SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_deploy
          chmod 600 ~/.ssh/id_deploy

      - name: Deploy over SSH via Cloudflare Tunnel
        env:
          GH_USER: ${{ github.repository_owner }}
          GHCR_READ_TOKEN: ${{ secrets.GHCR_READ_TOKEN }}
          COMPOSE_DIR: ${{ secrets.COMPOSE_PROJECT_DIR }}
        run: |
          set -e
          ssh -o "ProxyCommand cloudflared access ssh --hostname ssh.innakitchen.com" \
              -o BatchMode=yes -o StrictHostKeyChecking=no \
              -i ~/.ssh/id_deploy \
              korakod@ssh.innakitchen.com \
              "cd $COMPOSE_DIR && \
               docker login ghcr.io -u $GH_USER -p $GHCR_READ_TOKEN && \
               docker compose -f docker-compose.prod.yml pull && \
               docker compose -f docker-compose.prod.yml up -d && \
               docker image prune -f"
