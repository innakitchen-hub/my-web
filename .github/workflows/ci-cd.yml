name: CI/CD for my-web

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write    # สำหรับ push เข้า GHCR
  id-token: write    # เผื่อใช้ OIDC ในอนาคต

jobs:
  test:
    name: E2E (Cypress)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Build image จาก Dockerfile ของเรา แล้วรันคอนเทนเนอร์เว็บชั่วคราว
      - name: Build image
        run: docker build -t my-web:test .

      - name: Run web container
        run: docker run -d --rm --name my-web -p 8080:80 my-web:test

      # Cypress วิ่งกับ baseUrl http://localhost:8080
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          wait-on: 'http://localhost:8080'
          browser: chrome
        env:
          CYPRESS_baseUrl: "http://localhost:8080"

      - name: Show docker logs if failed
        if: failure()
        run: docker logs my-web || true

      - name: Stop web
        if: always()
        run: docker rm -f my-web || true

  build_and_push:
    name: Build & Push to GHCR
    needs: test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/my-web
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set tags
        id: vars
        run: |
          echo "TAG=latest" >> $GITHUB_OUTPUT
          echo "SHA_TAG=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.TAG }}
            ${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.SHA_TAG }}

  deploy:
    name: Deploy to Mac mini
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: SSH deploy (docker compose pull/up)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}       # e.g. 192.168.1.50 หรือ your.tunnel.domain
          username: ${{ secrets.SSH_USER }}   # e.g. korakod
          key: ${{ secrets.SSH_KEY }}         # private key (PEM)
          port: ${{ secrets.SSH_PORT }}       # e.g. 22
          script: |
            set -e
            cd ${{ secrets.COMPOSE_PROJECT_DIR }}  # โฟลเดอร์บน Mac mini ที่มี docker-compose.prod.yml
            docker login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
            docker image prune -f
